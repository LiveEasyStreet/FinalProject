<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.liveeasystreet.ecovalue.repository.member.MemberMapper">
    <insert id="save" useGeneratedKeys="true" keyProperty="memberId">
        insert into member
            (LOGIN_ID, MEMBER_PASSWORD, NICK_NAME, MEMBER_NAME, EMAIL, JOIN_DATE, BLACK_LIST, MEMBER_POINT)
        values
            (#{loginId}, #{memberPassword},#{nickName},#{memberName},#{email},now(),#{blackList},#{memberPoint})
    </insert>

    <update id="update">
        update member
        set NICK_NAME=#{updateDto.nickName},
            MEMBER_NAME=#{updateDto.memberName},
            MEMBER_PASSWORD=#{updateDto.memberPassword},
            EMAIL=#{updateDto.email}
        where MEMBER_ID=#{id}
    </update>

    <select id="findById" resultType="Member">
        select MEMBER_ID, LOGIN_ID, MEMBER_PASSWORD, NICK_NAME, MEMBER_NAME, EMAIL, JOIN_DATE, BLACK_LIST, MEMBER_POINT
        from member
        where MEMBER_ID = #{id}
    </select>

    <select id="findByLoginId" resultType="Member">
        select MEMBER_ID, LOGIN_ID, MEMBER_PASSWORD, NICK_NAME, MEMBER_NAME, EMAIL, JOIN_DATE, BLACK_LIST, MEMBER_POINT
        from member
        where LOGIN_ID = #{loginId}
    </select>

    <select id="findByNickName" resultType="Member">
        select MEMBER_ID, LOGIN_ID, MEMBER_PASSWORD, NICK_NAME, MEMBER_NAME, EMAIL, JOIN_DATE, BLACK_LIST, MEMBER_POINT
        from member
        where NICK_NAME = #{nickName}
    </select>

    <select id="findByEmail" resultType="Member">
        select MEMBER_ID, LOGIN_ID, MEMBER_PASSWORD, NICK_NAME, MEMBER_NAME, EMAIL, JOIN_DATE, BLACK_LIST, MEMBER_POINT
        from member
        where EMAIL = #{email}
    </select>

    <select id="findAll" resultType="Member">
        select MEMBER_ID, LOGIN_ID, MEMBER_PASSWORD, NICK_NAME, MEMBER_NAME, EMAIL, JOIN_DATE, BLACK_LIST, MEMBER_POINT
        from member
        <where>
            <if test="loginId != null and loginId != ''">
                and LOGIN_ID like concat('%',#{loginId},'%')
            </if>

            <if test="nickName != null and nickName != ''">
                and NICK_NAME like concat('%',#{nickName},'%')
            </if>

            <if test="memberName != null and memberName != ''">
                and MEMBER_NAME like concat('%',#{memberName},'%')
            </if>

            <if test="email != null and email != ''">
                and EMAIL like concat('%',#{email},'%')
            </if>
        </where>
    </select>

    <delete id="deleteById">
        delete from member
        where MEMBER_ID=#{id}
    </delete>



</mapper>